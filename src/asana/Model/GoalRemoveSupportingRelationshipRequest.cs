/*
 * Asana
 *
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = asana.Client.OpenAPIDateConverter;

namespace asana.Model
{
    /// <summary>
    /// GoalRemoveSupportingRelationshipRequest
    /// </summary>
    [DataContract]
    public partial class GoalRemoveSupportingRelationshipRequest :  IEquatable<GoalRemoveSupportingRelationshipRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GoalRemoveSupportingRelationshipRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GoalRemoveSupportingRelationshipRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GoalRemoveSupportingRelationshipRequest" /> class.
        /// </summary>
        /// <param name="supportingResource">The gid of the supporting resource to remove from the parent goal. Must be the gid of a goal, project, or portfolio. (required).</param>
        public GoalRemoveSupportingRelationshipRequest(string supportingResource = default(string))
        {
            // to ensure "supportingResource" is required (not null)
            if (supportingResource == null)
            {
                throw new InvalidDataException("supportingResource is a required property for GoalRemoveSupportingRelationshipRequest and cannot be null");
            }
            else
            {
                this.SupportingResource = supportingResource;
            }

        }

        /// <summary>
        /// The gid of the supporting resource to remove from the parent goal. Must be the gid of a goal, project, or portfolio.
        /// </summary>
        /// <value>The gid of the supporting resource to remove from the parent goal. Must be the gid of a goal, project, or portfolio.</value>
        [DataMember(Name="supporting_resource", EmitDefaultValue=true)]
        public string SupportingResource { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GoalRemoveSupportingRelationshipRequest {\n");
            sb.Append("  SupportingResource: ").Append(SupportingResource).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GoalRemoveSupportingRelationshipRequest);
        }

        /// <summary>
        /// Returns true if GoalRemoveSupportingRelationshipRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of GoalRemoveSupportingRelationshipRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GoalRemoveSupportingRelationshipRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SupportingResource == input.SupportingResource ||
                    (this.SupportingResource != null &&
                    this.SupportingResource.Equals(input.SupportingResource))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SupportingResource != null)
                    hashCode = hashCode * 59 + this.SupportingResource.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
