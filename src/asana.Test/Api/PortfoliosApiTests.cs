/*
 * Asana
 *
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/developer-docs/master/defs/asana_oas.yaml).
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using asana.Client;
using asana.Api;
using asana.Model;

namespace asana.Test
{
    /// <summary>
    ///  Class for testing PortfoliosApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PortfoliosApiTests
    {
        private PortfoliosApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PortfoliosApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PortfoliosApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' PortfoliosApi
            //Assert.IsInstanceOf(typeof(PortfoliosApi), instance);
        }

        
        /// <summary>
        /// Test AddCustomFieldSettingForPortfolio
        /// </summary>
        [Test]
        public void AddCustomFieldSettingForPortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string portfolioGid = null;
            //AddCustomFieldSettingForPortfolioRequest addCustomFieldSettingForPortfolioRequest = null;
            //bool? optPretty = null;
            //var response = instance.AddCustomFieldSettingForPortfolio(portfolioGid, addCustomFieldSettingForPortfolioRequest, optPretty);
            //Assert.IsInstanceOf(typeof(AddCustomFieldSettingForPortfolio200Response), response, "response is AddCustomFieldSettingForPortfolio200Response");
        }
        
        /// <summary>
        /// Test AddItemForPortfolio
        /// </summary>
        [Test]
        public void AddItemForPortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string portfolioGid = null;
            //AddItemForPortfolioRequest addItemForPortfolioRequest = null;
            //bool? optPretty = null;
            //List<string> optFields = null;
            //var response = instance.AddItemForPortfolio(portfolioGid, addItemForPortfolioRequest, optPretty, optFields);
            //Assert.IsInstanceOf(typeof(DeleteAttachment200Response), response, "response is DeleteAttachment200Response");
        }
        
        /// <summary>
        /// Test AddMembersForPortfolio
        /// </summary>
        [Test]
        public void AddMembersForPortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string portfolioGid = null;
            //AddMembersForPortfolioRequest addMembersForPortfolioRequest = null;
            //bool? optPretty = null;
            //List<string> optFields = null;
            //var response = instance.AddMembersForPortfolio(portfolioGid, addMembersForPortfolioRequest, optPretty, optFields);
            //Assert.IsInstanceOf(typeof(CreatePortfolio201Response), response, "response is CreatePortfolio201Response");
        }
        
        /// <summary>
        /// Test CreatePortfolio
        /// </summary>
        [Test]
        public void CreatePortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreatePortfolioRequest createPortfolioRequest = null;
            //bool? optPretty = null;
            //List<string> optFields = null;
            //var response = instance.CreatePortfolio(createPortfolioRequest, optPretty, optFields);
            //Assert.IsInstanceOf(typeof(CreatePortfolio201Response), response, "response is CreatePortfolio201Response");
        }
        
        /// <summary>
        /// Test DeletePortfolio
        /// </summary>
        [Test]
        public void DeletePortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string portfolioGid = null;
            //bool? optPretty = null;
            //List<string> optFields = null;
            //var response = instance.DeletePortfolio(portfolioGid, optPretty, optFields);
            //Assert.IsInstanceOf(typeof(DeleteAttachment200Response), response, "response is DeleteAttachment200Response");
        }
        
        /// <summary>
        /// Test GetItemsForPortfolio
        /// </summary>
        [Test]
        public void GetItemsForPortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string portfolioGid = null;
            //bool? optPretty = null;
            //List<string> optFields = null;
            //int? limit = null;
            //string offset = null;
            //var response = instance.GetItemsForPortfolio(portfolioGid, optPretty, optFields, limit, offset);
            //Assert.IsInstanceOf(typeof(GetItemsForPortfolio200Response), response, "response is GetItemsForPortfolio200Response");
        }
        
        /// <summary>
        /// Test GetPortfolio
        /// </summary>
        [Test]
        public void GetPortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string portfolioGid = null;
            //bool? optPretty = null;
            //List<string> optFields = null;
            //var response = instance.GetPortfolio(portfolioGid, optPretty, optFields);
            //Assert.IsInstanceOf(typeof(CreatePortfolio201Response), response, "response is CreatePortfolio201Response");
        }
        
        /// <summary>
        /// Test GetPortfolios
        /// </summary>
        [Test]
        public void GetPortfoliosTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string workspace = null;
            //string owner = null;
            //bool? optPretty = null;
            //List<string> optFields = null;
            //int? limit = null;
            //string offset = null;
            //var response = instance.GetPortfolios(workspace, owner, optPretty, optFields, limit, offset);
            //Assert.IsInstanceOf(typeof(GetPortfolios200Response), response, "response is GetPortfolios200Response");
        }
        
        /// <summary>
        /// Test RemoveCustomFieldSettingForPortfolio
        /// </summary>
        [Test]
        public void RemoveCustomFieldSettingForPortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string portfolioGid = null;
            //RemoveCustomFieldSettingForPortfolioRequest removeCustomFieldSettingForPortfolioRequest = null;
            //bool? optPretty = null;
            //var response = instance.RemoveCustomFieldSettingForPortfolio(portfolioGid, removeCustomFieldSettingForPortfolioRequest, optPretty);
            //Assert.IsInstanceOf(typeof(DeleteAttachment200Response), response, "response is DeleteAttachment200Response");
        }
        
        /// <summary>
        /// Test RemoveItemForPortfolio
        /// </summary>
        [Test]
        public void RemoveItemForPortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string portfolioGid = null;
            //RemoveItemForPortfolioRequest removeItemForPortfolioRequest = null;
            //bool? optPretty = null;
            //List<string> optFields = null;
            //var response = instance.RemoveItemForPortfolio(portfolioGid, removeItemForPortfolioRequest, optPretty, optFields);
            //Assert.IsInstanceOf(typeof(DeleteAttachment200Response), response, "response is DeleteAttachment200Response");
        }
        
        /// <summary>
        /// Test RemoveMembersForPortfolio
        /// </summary>
        [Test]
        public void RemoveMembersForPortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string portfolioGid = null;
            //RemoveMembersForPortfolioRequest removeMembersForPortfolioRequest = null;
            //bool? optPretty = null;
            //List<string> optFields = null;
            //var response = instance.RemoveMembersForPortfolio(portfolioGid, removeMembersForPortfolioRequest, optPretty, optFields);
            //Assert.IsInstanceOf(typeof(CreatePortfolio201Response), response, "response is CreatePortfolio201Response");
        }
        
        /// <summary>
        /// Test UpdatePortfolio
        /// </summary>
        [Test]
        public void UpdatePortfolioTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string portfolioGid = null;
            //CreatePortfolioRequest createPortfolioRequest = null;
            //bool? optPretty = null;
            //List<string> optFields = null;
            //var response = instance.UpdatePortfolio(portfolioGid, createPortfolioRequest, optPretty, optFields);
            //Assert.IsInstanceOf(typeof(CreatePortfolio201Response), response, "response is CreatePortfolio201Response");
        }
        
    }

}
